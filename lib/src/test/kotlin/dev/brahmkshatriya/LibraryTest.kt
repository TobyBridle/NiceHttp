/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dev.brahmkshatriya

import dev.brahmkshatriya.nicehttp.Requests
import kotlinx.coroutines.async
import kotlinx.coroutines.runBlocking
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlin.test.Test

class LibraryTest {
    @Test
    fun someLibraryMethodReturnsTrue() {
        runBlocking {
            val requests = Requests()

            // Example for query selector
            val doc = requests.get("https://github.com/Blatzar/NiceHttp").document
            println("Selector description: ${doc.select("p.f4.my-3").text()}")

            // Example for json Parser
            val json =
                requests.get("https://api.github.com/repos/blatzar/nicehttp").parsed<GithubJson>()
            println("JSON description: ${json.description}")

            // Example for Async-ed Requests
            (0..3).toList().asyncMap {
                println("Entered Async")
                println("Response ::: " + requests.get("https://github.com/").code)
                println("Exit Async")
            }
        }

    }

    @Serializable
    data class GithubJson(
        val description: String,
        @SerialName("html_url") val htmlUrl: String,
        @SerialName("stargazers_count") val stargazersCount: Int,
        val private: Boolean
    )

    private fun <A, B> List<A>.asyncMap(f: suspend (A) -> B): List<B> = runBlocking {
        map { async { f(it) } }.map { it.await() }
    }
}
